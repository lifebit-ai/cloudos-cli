name: cloudos-cli CI tests

on:
  pull_request:
    types: [review_requested, ready_for_review]
    branches:
      - main
      - dev
    paths-ignore:
      - 'docs/**'
  workflow_dispatch:

permissions:
  contents: read

jobs:
  Pytest:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: pip
        cache-dependency-path: setup.py
    - name: Install dependencies
      run: |
        pip install -e '.[test]'
    - name: Run tests
      run: |
        pytest
  job_list:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: pip
        cache-dependency-path: setup.py
    - name: Install dependencies
      run: |
        pip install -e .
    - name: Run tests
      env:
        CLOUDOS_TOKEN: ${{ secrets.CLOUDOS_TOKEN }}
        CLOUDOS_WORKSPACE_ID: ${{ secrets.CLOUDOS_WORKSPACE_ID }}
      run: |
        cloudos job list --apikey $CLOUDOS_TOKEN --workspace-id $CLOUDOS_WORKSPACE_ID
  job_run:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: pip
        cache-dependency-path: setup.py
    - name: Install dependencies
      run: |
        pip install -e .
    - name: Run tests
      env:
        CLOUDOS_TOKEN: ${{ secrets.CLOUDOS_TOKEN }}
        CLOUDOS_WORKSPACE_ID: ${{ secrets.CLOUDOS_WORKSPACE_ID }}
      run: |
        cloudos job run --apikey $CLOUDOS_TOKEN --workspace-id $CLOUDOS_WORKSPACE_ID --project-name "API jobs" --workflow-name rnatoy --job-config "cloudos/examples/rnatoy.config" --instance-type "c5.large" --spot 2>&1 | tee out.txt
        JOB_ID=$(grep -e "Your assigned job id is:" out.txt | rev | cut -f1 -d " " | rev)
        cloudos job status --apikey $CLOUDOS_TOKEN --job-id $JOB_ID
