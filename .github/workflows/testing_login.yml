name: Test container and PyPI logins

on:
  workflow_dispatch:  # run manually from the Actions tab
  push:
    branches: [ release_automation ]  # Add this for testing
    paths: 
      - '.github/workflows/testing_login.yml'  # Only trigger when this file changes
  
jobs:
  test-logins:
    name: Verify Quay, ECR, and PyPI credentials
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ${{ vars.AWS_REGION || 'eu-west-1' }}
      ECR_ACCOUNT_ID: ${{ vars.ECR_ACCOUNT_ID || '518054667335' }}
      ECR_REPO: ${{ vars.ECR_REPO || 'test-repo' }}
      QUAY_REPO: ${{ vars.QUAY_REPO || 'quay.io/your-org/test' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # --- Quay.io login test ---
      - name: Test Quay.io login
        id: quay
        uses: docker/login-action@v3
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_LOGIN_ID }}
          password: ${{ secrets.QUAY_LOGIN_PWD }}
      - name: Verify Quay login works
        run: |
          echo "✅ Successfully logged into Quay.io"
          docker info | grep "Username" || echo "Quay login failed"

      # --- PyPI login test ---
      - name: Test PyPI login (non-destructive)
        run: |
          echo "Testing PyPI credentials..."
          curl -u "__token__:${{ secrets.PYPI_LOGIN_TOKEN }}" \
            -X GET https://upload.pypi.org/legacy/ -I | grep "HTTP/"
          echo "✅ Successfully authenticated to PyPI"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Test AWS connection
        run: |
          echo "Testing AWS connection..."
          aws sts get-caller-identity
          echo "✅ AWS credentials are valid"

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registries: ${{ env.ECR_ACCOUNT_ID }}

      - name: Verify ECR login
        run: |
          echo "✅ Successfully logged into AWS ECR"
          echo "Registry: ${{ steps.login-ecr.outputs.registry }}"

      - name: Debug AWS credentials (without configuring)
        run: |
          echo "Checking AWS credential format..."
          echo "Access Key ID length: ${#AWS_ACCESS_KEY_ID}"
          echo "Secret Key length: ${#AWS_SECRET_ACCESS_KEY}"
          echo "Access Key starts with: ${AWS_ACCESS_KEY_ID:0:4}..."
          echo "Region: $AWS_REGION"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
          AWS_REGION: ${{ env.AWS_REGION }}

      - name: Test basic AWS connection manually
        run: |
          export AWS_ACCESS_KEY_ID="${{ secrets.AWS_KEY_ID }}"
          export AWS_SECRET_ACCESS_KEY="${{ secrets.AWS_SECRET_KEY }}"
          export AWS_DEFAULT_REGION="${{ env.AWS_REGION }}"
          echo "Testing AWS STS..."
          aws sts get-caller-identity || echo "Manual AWS test failed"
        env:
          AWS_REGION: ${{ env.AWS_REGION }}